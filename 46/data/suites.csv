"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Fri Apr 21 20:03:25 GMT 2023","Fri Apr 21 20:03:26 GMT 2023","1105","player.muse","test_basic_formatting","","","","test_no_header","
    Ensure that an error is thrown if the header is missing.
    :param module_dut:
    :param ws_client_v2:
    "
"passed","Fri Apr 21 20:07:23 GMT 2023","Fri Apr 21 20:07:24 GMT 2023","1109","player.muse","test_shared_muse_logic","","","","test_set_volume[19-True]","
    Verify a range of values work. Out of bounds on the high side generates error, oob low side clamps to 0
    SWPBL-105577 - We clamp all negative values to 0
    :param module_dut:
    :param ws_client:
    :param volume:
    :param muted:
    :return:
    "
"passed","Fri Apr 21 20:03:33 GMT 2023","Fri Apr 21 20:03:34 GMT 2023","1105","player.muse","test_basic_formatting","","","","test_unsupported_namespace","
    Ensure that non-existant namespaces throw errors.
    :param module_dut:
    :param ws_client_v2:
    "
"passed","Fri Apr 21 20:07:35 GMT 2023","Fri Apr 21 20:07:36 GMT 2023","1105","player.muse","test_shared_muse_logic","","","","test_set_volume[92-None]","
    Verify a range of values work. Out of bounds on the high side generates error, oob low side clamps to 0
    SWPBL-105577 - We clamp all negative values to 0
    :param module_dut:
    :param ws_client:
    :param volume:
    :param muted:
    :return:
    "
"passed","Fri Apr 21 20:04:56 GMT 2023","Fri Apr 21 20:05:02 GMT 2023","6432","player.muse","test_platformInternal_namespace","","","","test_invalidateCache_populates_replicated_file","
    SWPBL-153417
    The invalidateCache command will be used to invalidate the local player's
    cache of various services(mhs, auth, entitlements). To do this, the command generates and updates a replicated file
    with the time of when the cache is good until.

    This test is to verify the mechanism of the file management. The file should be created if it doesn't exist and the
    correct entry in it should be updated after each invalidate call is made. The file should then be replicated across
    the household.

    Note:
    The player uses the UUID in the value field for invalidation logic.
    That value has to change in order for the caches to be invalidated.

    Example httpcaches.json:
    {u'entries': [{u'expires': u'1970-01-01T00:47:10.000Z',
    u'key': u'authzTokens',
    u'lastUsed': u'1970-01-01T00:47:10.000Z',
    u'value': u'f127fce7-2ef6-4e85-96e2-e31c4bb427ac'}],
    u'fileSchemaVersion': 1,
    u'fileVersion': 2,
    u'lastUpdateDevice': u'RINCON_7828CA0922C801400'}

    "
"passed","Fri Apr 21 20:03:41 GMT 2023","Fri Apr 21 20:03:42 GMT 2023","114","player.muse","test_basic_formatting","","","","test_bad_gid","
    Ensure that REST calls with a wrong group id fail.
    :param module_dut:
    "
"passed","Fri Apr 21 20:04:02 GMT 2023","Fri Apr 21 20:04:08 GMT 2023","5719","player.muse","test_favorites_namespace","","","","test_load_favorite_track[Normal length tracks]","
    Verifies favoriting a track, and loading it.
    :param module_dut:
    :param ws_client:
    "
"passed","Fri Apr 21 20:03:16 GMT 2023","Fri Apr 21 20:03:17 GMT 2023","1102","player.muse","test_basic_formatting","","","","test_bad_body[Empty]","
    Test that malformed bodies throw an error
    :param module_dut:
    :param ws_client_v2:
    :param body: The malformed body to send
    "
"passed","Fri Apr 21 20:07:58 GMT 2023","Fri Apr 21 20:07:58 GMT 2023","104","player.muse","test_shared_muse_logic","","","","test_rest_V1_empty_apiKey_rejected","
    SWPBL-144572 | Verify request without X-Sonos-Api-Key header while sending a Muse REST V1 request results in failure
    :param module_dut:
    :return:
    "
"passed","Fri Apr 21 20:06:06 GMT 2023","Fri Apr 21 20:06:07 GMT 2023","1002","player.muse","test_shared_muse_logic","","","","test_bad_header_params[no sessionId]","
    Negative test sends empty/invalid values for all the possible header keys and verifies the correct error is thrown
    :param ws_client:
    :param param: Header key to verify, groupId, namespace, etc
    :param value: Value to set the header key
    :param error: Expected error response
    :return:
    "
"passed","Fri Apr 21 20:05:41 GMT 2023","Fri Apr 21 20:05:41 GMT 2023","95","player.muse","test_platformInternal_namespace","","","","test_invalidateCache_bad_cacheNamespace[Bad cacheData]","
    SWPBL-171354: Multiple Muse Caches
    Verify that an error is thrown when a bad cacheNamespace or cacheData is given
    "
"passed","Fri Apr 21 20:06:10 GMT 2023","Fri Apr 21 20:06:11 GMT 2023","1002","player.muse","test_shared_muse_logic","","","","test_bad_header_params[no namespace]","
    Negative test sends empty/invalid values for all the possible header keys and verifies the correct error is thrown
    :param ws_client:
    :param param: Header key to verify, groupId, namespace, etc
    :param value: Value to set the header key
    :param error: Expected error response
    :return:
    "
"passed","Fri Apr 21 20:06:59 GMT 2023","Fri Apr 21 20:07:05 GMT 2023","6221","player.muse","test_shared_muse_logic","","","","test_subscribe_unsubscribe","
    Verifies unsubscribe functionality
    :param module_dut:
    :param ws_client:
    :return:
    "
"passed","Fri Apr 21 20:05:05 GMT 2023","Fri Apr 21 20:05:06 GMT 2023","363","player.muse","test_platformInternal_namespace","","","","test_invalidateCache_bad_cache_name","
    SWPBL-153417
    Verify that an invalid cache name does not cause any changes to the httpcaches file
    "
"passed","Fri Apr 21 20:05:36 GMT 2023","Fri Apr 21 20:05:36 GMT 2023","100","player.muse","test_platformInternal_namespace","","","","test_invalidateCache_bad_cacheNamespace[Bad cacheNamespace]","
    SWPBL-171354: Multiple Muse Caches
    Verify that an error is thrown when a bad cacheNamespace or cacheData is given
    "
"passed","Fri Apr 21 20:03:46 GMT 2023","Fri Apr 21 20:03:55 GMT 2023","9258","player.muse","test_favorites_namespace","","","","test_load_favorite_stream","
    Verifies favoriting a stream, and loading it.
    :param module_dut:
    :param ws_client_v2:
    "
"passed","Fri Apr 21 20:06:42 GMT 2023","Fri Apr 21 20:06:43 GMT 2023","1002","player.muse","test_shared_muse_logic","","","","test_bad_header_params_v2[no householdId]","
    Negative test sends empty values for some possible header keys and verifies the correct error is thrown
    :param ws_client_v2:
    :param param:
    :param error:
    :return:
    "
"passed","Fri Apr 21 20:03:38 GMT 2023","Fri Apr 21 20:03:39 GMT 2023","1004","player.muse","test_basic_formatting","","","","test_cmd_id_cast_to_string","
    Ensure that websocket calls an int cmdId get translated seamlessy to string.
    :param module_dut:
    :param ws_client_v2:
    "
"passed","Fri Apr 21 20:06:46 GMT 2023","Fri Apr 21 20:06:56 GMT 2023","9095","player.muse","test_shared_muse_logic","","","","test_group_status","
    Tests the group states during grouping/ungrouping/etc

    :param module_dut:
    :param ws_client:
    :param websocket_manager:
    :param dut_manager:
    :return:
    "
"passed","Fri Apr 21 20:06:14 GMT 2023","Fri Apr 21 20:06:15 GMT 2023","1003","player.muse","test_shared_muse_logic","","","","test_bad_header_params[no command]","
    Negative test sends empty/invalid values for all the possible header keys and verifies the correct error is thrown
    :param ws_client:
    :param param: Header key to verify, groupId, namespace, etc
    :param value: Value to set the header key
    :param error: Expected error response
    :return:
    "
"passed","Fri Apr 21 20:06:18 GMT 2023","Fri Apr 21 20:06:19 GMT 2023","1003","player.muse","test_shared_muse_logic","","","","test_bad_header_params[bad playerId]","
    Negative test sends empty/invalid values for all the possible header keys and verifies the correct error is thrown
    :param ws_client:
    :param param: Header key to verify, groupId, namespace, etc
    :param value: Value to set the header key
    :param error: Expected error response
    :return:
    "
"passed","Fri Apr 21 20:07:18 GMT 2023","Fri Apr 21 20:07:19 GMT 2023","1108","player.muse","test_shared_muse_logic","","","","test_set_volume[150-False]","
    Verify a range of values work. Out of bounds on the high side generates error, oob low side clamps to 0
    SWPBL-105577 - We clamp all negative values to 0
    :param module_dut:
    :param ws_client:
    :param volume:
    :param muted:
    :return:
    "
"passed","Fri Apr 21 20:03:29 GMT 2023","Fri Apr 21 20:03:30 GMT 2023","1003","player.muse","test_basic_formatting","","","","test_unsupported_cmd","
    Ensure that websocket calls with unsupported commands fail with an error.
    :param module_dut:
    :param ws_client_v2:
    "
"passed","Fri Apr 21 20:04:17 GMT 2023","Fri Apr 21 20:04:25 GMT 2023","7731","player.muse","test_global_namespace","","","","test_GroupCoordinatorChangedEvent_websocketUrl_v1","
    Creates a group and verifies the WS URL in a getGroups response for grouped players has the correct format
    Breaks apart the group and verifies that the WS URL in GroupCoordinatorChangedEvent has the correct format
    MUSE implementation note:
    websocketUrl (optional) - Only included if groupStatus is GROUP_STATUS_MOVED.
    Reflects the WebSocket URL of the player that is the new coordinator for the group
    SWPBL-89976
    :param websocket_manager:
    :param dut_manager:
    :param module_dut:
    :param ws_client:
    :return:
    "
"passed","Fri Apr 21 20:04:51 GMT 2023","Fri Apr 21 20:04:52 GMT 2023","1003","player.muse","test_platformInternal_namespace","","","","test_sync_successful_response[False]","
    Send sync command and verify response is correct
    SWPBL-89626
    https://confluence.sonos.com/pages/viewpage.action?pageId=112639757#MuseProtocol-%22platformInternal%22namespace-sync(householdId)
    :param ws_client:
    :param full_sync:
    :return:
    "
"passed","Fri Apr 21 20:06:22 GMT 2023","Fri Apr 21 20:06:23 GMT 2023","1002","player.muse","test_shared_muse_logic","","","","test_bad_header_params[bad sessionId]","
    Negative test sends empty/invalid values for all the possible header keys and verifies the correct error is thrown
    :param ws_client:
    :param param: Header key to verify, groupId, namespace, etc
    :param value: Value to set the header key
    :param error: Expected error response
    :return:
    "
"passed","Fri Apr 21 20:06:37 GMT 2023","Fri Apr 21 20:06:38 GMT 2023","1002","player.muse","test_shared_muse_logic","","","","test_bad_header_params_v2[no authorization]","
    Negative test sends empty values for some possible header keys and verifies the correct error is thrown
    :param ws_client_v2:
    :param param:
    :param error:
    :return:
    "
"passed","Fri Apr 21 20:04:47 GMT 2023","Fri Apr 21 20:04:48 GMT 2023","1003","player.muse","test_platformInternal_namespace","","","","test_sync_successful_response[True]","
    Send sync command and verify response is correct
    SWPBL-89626
    https://confluence.sonos.com/pages/viewpage.action?pageId=112639757#MuseProtocol-%22platformInternal%22namespace-sync(householdId)
    :param ws_client:
    :param full_sync:
    :return:
    "
"passed","Fri Apr 21 20:07:12 GMT 2023","Fri Apr 21 20:07:13 GMT 2023","1002","player.muse","test_shared_muse_logic","","","","test_invalid_oauth_token[lower scope]","
    SWPBL-93702, SWPBL-93706
    Verify that we can pass a bad or improperly scoped oauth token and it is rejected
    on the player
    :param ws_client:
    :param oauth_token:
    :return:
    "
"skipped","Fri Apr 21 20:04:53 GMT 2023","Fri Apr 21 20:04:53 GMT 2023","0","player.muse","test_platformInternal_namespace","","","","test_reboot_successful_response","
    SWPBL-106563
    Control API: Implement player reboot in Muse
    :param module_dut:
    :param ws_client:
    :return:
    "
"passed","Fri Apr 21 20:07:44 GMT 2023","Fri Apr 21 20:07:56 GMT 2023","11938","player.muse","test_shared_muse_logic","","","","test_websocket_V1_empty_apiKey_rejected","
    SWPBL-144572 | Verify empty apiKey while opening a Muse WebSocket V1 connection results in a failure
    :param module_dut:
    :return:
    "
"passed","Fri Apr 21 20:04:30 GMT 2023","Fri Apr 21 20:04:39 GMT 2023","8404","player.muse","test_global_namespace","","","","test_GroupCoordinatorChangedEvent_websocketUrl_v2","
    Creates a group and verifies the WS URL in a getGroups response for grouped players has the correct format
    Breaks apart the group and verifies that the WS URL in GroupCoordinatorChangedEvent has the correct format
    SWPBL-89976
    MUSE implementation note:
    websocketUrl (optional) - Only included if groupStatus is GROUP_STATUS_MOVED.
    Reflects the WebSocket URL of the player that is the new coordinator for the group
    :param :
    :param websocket_manager:
    :param dut_manager:
    :param module_dut:
    :param ws_client_v2:
    :return:
    "
"passed","Fri Apr 21 20:02:58 GMT 2023","Fri Apr 21 20:03:06 GMT 2023","8072","player.muse","test_basic_formatting","","","","test_bad_body[No Closing Brace]","
    Test that malformed bodies throw an error
    :param module_dut:
    :param ws_client_v2:
    :param body: The malformed body to send
    "
"passed","Fri Apr 21 20:06:02 GMT 2023","Fri Apr 21 20:06:03 GMT 2023","1002","player.muse","test_shared_muse_logic","","","","test_bad_header_params[no playerId]","
    Negative test sends empty/invalid values for all the possible header keys and verifies the correct error is thrown
    :param ws_client:
    :param param: Header key to verify, groupId, namespace, etc
    :param value: Value to set the header key
    :param error: Expected error response
    :return:
    "
"passed","Fri Apr 21 20:03:20 GMT 2023","Fri Apr 21 20:03:21 GMT 2023","1119","player.muse","test_basic_formatting","","","","test_no_body","
    Ensure an error is thrown if no body is sent
    :param module_dut:
    :param ws_client_v2:
    "
"passed","Fri Apr 21 20:05:57 GMT 2023","Fri Apr 21 20:05:58 GMT 2023","1104","player.muse","test_shared_muse_logic","","","","test_bad_header_params[no groupId]","
    Negative test sends empty/invalid values for all the possible header keys and verifies the correct error is thrown
    :param ws_client:
    :param param: Header key to verify, groupId, namespace, etc
    :param value: Value to set the header key
    :param error: Expected error response
    :return:
    "
"passed","Fri Apr 21 20:06:33 GMT 2023","Fri Apr 21 20:06:34 GMT 2023","1002","player.muse","test_shared_muse_logic","","","","test_bad_header_params[bad command]","
    Negative test sends empty/invalid values for all the possible header keys and verifies the correct error is thrown
    :param ws_client:
    :param param: Header key to verify, groupId, namespace, etc
    :param value: Value to set the header key
    :param error: Expected error response
    :return:
    "
"passed","Fri Apr 21 20:08:02 GMT 2023","Fri Apr 21 20:08:03 GMT 2023","1001","player.muse","test_shared_muse_logic","","","","test_muse_maxlength_enforced","
    SWPBL-172975: Create a maxLength muse test
    For this test we will use createArea, and feed in a ""name"" that is larger than the maxLength of 64
    characters. The string should be truncated to 64. The ""name"" string will also include an escaped quote
    which was the crux of the original bug (linked in the Jira).
    :param module_dut:
    :param ws_client:
    :return:
    "
"passed","Fri Apr 21 20:04:43 GMT 2023","Fri Apr 21 20:04:44 GMT 2023","1003","player.muse","test_platformInternal_namespace","","","","test_sync_successful_response[None]","
    Send sync command and verify response is correct
    SWPBL-89626
    https://confluence.sonos.com/pages/viewpage.action?pageId=112639757#MuseProtocol-%22platformInternal%22namespace-sync(householdId)
    :param ws_client:
    :param full_sync:
    :return:
    "
"skipped","Fri Apr 21 20:05:30 GMT 2023","Fri Apr 21 20:05:30 GMT 2023","72","player.muse","test_platformInternal_namespace","","","","test_invalidateCache_cacheNamespace[Without cacheData-Default Mock Config]","
    SWPBL-171354: Multiple Muse Caches
    Verify that the correct cache(s) are invalidated, and other caches left alone, when:
        1. Only the namespace is specified: All auth caches should be cleared
        2. A single cache within a namespace is specified: Only that cache is cleared
    "
"skipped","Fri Apr 21 20:05:33 GMT 2023","Fri Apr 21 20:05:33 GMT 2023","1","player.muse","test_platformInternal_namespace","","","","test_invalidateCache_cacheNamespace[With cacheData-Default Mock Config]","
    SWPBL-171354: Multiple Muse Caches
    Verify that the correct cache(s) are invalidated, and other caches left alone, when:
        1. Only the namespace is specified: All auth caches should be cleared
        2. A single cache within a namespace is specified: Only that cache is cleared
    "
"passed","Fri Apr 21 20:07:08 GMT 2023","Fri Apr 21 20:07:09 GMT 2023","1003","player.muse","test_shared_muse_logic","","","","test_invalid_oauth_token[garbage]","
    SWPBL-93702, SWPBL-93706
    Verify that we can pass a bad or improperly scoped oauth token and it is rejected
    on the player
    :param ws_client:
    :param oauth_token:
    :return:
    "
"passed","Fri Apr 21 20:07:41 GMT 2023","Fri Apr 21 20:07:42 GMT 2023","1104","player.muse","test_shared_muse_logic","","","","test_set_volume[None-True]","
    Verify a range of values work. Out of bounds on the high side generates error, oob low side clamps to 0
    SWPBL-105577 - We clamp all negative values to 0
    :param module_dut:
    :param ws_client:
    :param volume:
    :param muted:
    :return:
    "
"passed","Fri Apr 21 20:03:11 GMT 2023","Fri Apr 21 20:03:12 GMT 2023","1104","player.muse","test_basic_formatting","","","","test_bad_body[No Opening Brace]","
    Test that malformed bodies throw an error
    :param module_dut:
    :param ws_client_v2:
    :param body: The malformed body to send
    "
"passed","Fri Apr 21 20:06:27 GMT 2023","Fri Apr 21 20:06:28 GMT 2023","1002","player.muse","test_shared_muse_logic","","","","test_bad_header_params[bad namespace]","
    Negative test sends empty/invalid values for all the possible header keys and verifies the correct error is thrown
    :param ws_client:
    :param param: Header key to verify, groupId, namespace, etc
    :param value: Value to set the header key
    :param error: Expected error response
    :return:
    "
"passed","Fri Apr 21 20:07:29 GMT 2023","Fri Apr 21 20:07:30 GMT 2023","1107","player.muse","test_shared_muse_logic","","","","test_set_volume[-1-False]","
    Verify a range of values work. Out of bounds on the high side generates error, oob low side clamps to 0
    SWPBL-105577 - We clamp all negative values to 0
    :param module_dut:
    :param ws_client:
    :param volume:
    :param muted:
    :return:
    "
