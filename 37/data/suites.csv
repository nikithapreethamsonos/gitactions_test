"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Fri Apr 21 19:41:46 GMT 2023","Fri Apr 21 19:41:49 GMT 2023","3215","player.muse","test_upnp_namespace","","","","test_upnpAudioIn_call_success_REST[LINE_IN_CAPABLE DUT]","
    Verify call method returns requested output params for upnpAudioIn namespace using REST
    :param function_dut:
    :return:
    "
"passed","Fri Apr 21 19:41:18 GMT 2023","Fri Apr 21 19:41:29 GMT 2023","10249","player.muse","test_upnp_namespace","","","","test_subscribe_renew_async_events","
    Last updated for SWPBL-144492
    Verify the test client receives async events from a sub'ed upnp namespace.
    Verify that renew continues a short lived sub.
    :param module_dut:
    :param ws_client:
    :return:
    "
"passed","Fri Apr 21 19:41:56 GMT 2023","Fri Apr 21 19:41:56 GMT 2023","116","player.muse","test_upnp_namespace","","","","test_upnpQueue_removeAllTracks_REST","
    SWPBL-178404
    Verify that the RemoveAllTracks UPnP command can be successfully called via the REST interface
    :param module_dut:
    :return:
    "
"passed","Fri Apr 21 19:40:10 GMT 2023","Fri Apr 21 19:40:12 GMT 2023","2149","player.muse","test_upnp_namespace","","","","test_upnp_namespace_subscribe_unsubscribe_success[upnpAVTransport]","
    Last updated for SWPBL-144492
    Verify subscribe and unsubscribe for upnp tunneled namespaces return success.
    Also verify when unsubscribed, the sub id is removed from the player's subscription list.
    :param module_dut:
    :param ws_client:
    :param upnp_service:
    :return:
    "
"passed","Fri Apr 21 19:40:45 GMT 2023","Fri Apr 21 19:40:47 GMT 2023","2156","player.muse","test_upnp_namespace","","","","test_upnp_namespace_subscribe_unsubscribe_success[upnpGroupRenderingControl]","
    Last updated for SWPBL-144492
    Verify subscribe and unsubscribe for upnp tunneled namespaces return success.
    Also verify when unsubscribed, the sub id is removed from the player's subscription list.
    :param module_dut:
    :param ws_client:
    :param upnp_service:
    :return:
    "
"skipped","Fri Apr 21 19:42:35 GMT 2023","Fri Apr 21 19:42:35 GMT 2023","0","player.muse","test_upnp_namespace","","","","test_upnp_subscribe_load[TLS Cached]","
    SWPBL-196285 and SWPBL-195363
    Repeatedly take down UPnP subscriptions, and stand them back up using a testpoint. Take CPU and memory measurements of the testbed.
    This is to gauge how much additional resources are utilized by TLS secured UPnP.
    :param dut_manager:
    :flush_tls_cache: Flushing the tls cache will cause much more resources to be used, as each connection the full handshake will need to occur
    :return:
    "
"passed","Fri Apr 21 19:40:16 GMT 2023","Fri Apr 21 19:40:18 GMT 2023","2148","player.muse","test_upnp_namespace","","","","test_upnp_namespace_subscribe_unsubscribe_success[upnpAlarmClock]","
    Last updated for SWPBL-144492
    Verify subscribe and unsubscribe for upnp tunneled namespaces return success.
    Also verify when unsubscribed, the sub id is removed from the player's subscription list.
    :param module_dut:
    :param ws_client:
    :param upnp_service:
    :return:
    "
"skipped","Fri Apr 21 19:42:35 GMT 2023","Fri Apr 21 19:42:35 GMT 2023","0","player.muse","test_upnp_namespace","","","","test_upnp_subscribe_load[TLS Flushed]","
    SWPBL-196285 and SWPBL-195363
    Repeatedly take down UPnP subscriptions, and stand them back up using a testpoint. Take CPU and memory measurements of the testbed.
    This is to gauge how much additional resources are utilized by TLS secured UPnP.
    :param dut_manager:
    :flush_tls_cache: Flushing the tls cache will cause much more resources to be used, as each connection the full handshake will need to occur
    :return:
    "
"passed","Fri Apr 21 19:41:07 GMT 2023","Fri Apr 21 19:41:09 GMT 2023","2146","player.muse","test_upnp_namespace","","","","test_upnp_namespace_subscribe_unsubscribe_success[upnpSystemProperties]","
    Last updated for SWPBL-144492
    Verify subscribe and unsubscribe for upnp tunneled namespaces return success.
    Also verify when unsubscribed, the sub id is removed from the player's subscription list.
    :param module_dut:
    :param ws_client:
    :param upnp_service:
    :return:
    "
"passed","Fri Apr 21 19:40:50 GMT 2023","Fri Apr 21 19:40:52 GMT 2023","2172","player.muse","test_upnp_namespace","","","","test_upnp_namespace_subscribe_unsubscribe_success[upnpMusicServices]","
    Last updated for SWPBL-144492
    Verify subscribe and unsubscribe for upnp tunneled namespaces return success.
    Also verify when unsubscribed, the sub id is removed from the player's subscription list.
    :param module_dut:
    :param ws_client:
    :param upnp_service:
    :return:
    "
"passed","Fri Apr 21 19:40:39 GMT 2023","Fri Apr 21 19:40:41 GMT 2023","2139","player.muse","test_upnp_namespace","","","","test_upnp_namespace_subscribe_unsubscribe_success[upnpGroupManagement]","
    Last updated for SWPBL-144492
    Verify subscribe and unsubscribe for upnp tunneled namespaces return success.
    Also verify when unsubscribed, the sub id is removed from the player's subscription list.
    :param module_dut:
    :param ws_client:
    :param upnp_service:
    :return:
    "
"passed","Fri Apr 21 19:40:56 GMT 2023","Fri Apr 21 19:40:58 GMT 2023","2153","player.muse","test_upnp_namespace","","","","test_upnp_namespace_subscribe_unsubscribe_success[upnpQueue]","
    Last updated for SWPBL-144492
    Verify subscribe and unsubscribe for upnp tunneled namespaces return success.
    Also verify when unsubscribed, the sub id is removed from the player's subscription list.
    :param module_dut:
    :param ws_client:
    :param upnp_service:
    :return:
    "
"passed","Fri Apr 21 19:41:52 GMT 2023","Fri Apr 21 19:41:54 GMT 2023","1376","player.muse","test_upnp_namespace","","","","test_upnpHTControl_call_success_REST[HT_MASTER DUT]","
    Verify call method returns requested output params for upnpHTControl namespace using REST
    :param function_dut:
    :return:
    "
"passed","Fri Apr 21 19:40:27 GMT 2023","Fri Apr 21 19:40:30 GMT 2023","2263","player.muse","test_upnp_namespace","","","","test_upnp_namespace_subscribe_unsubscribe_success[upnpContentDirectory]","
    Last updated for SWPBL-144492
    Verify subscribe and unsubscribe for upnp tunneled namespaces return success.
    Also verify when unsubscribed, the sub id is removed from the player's subscription list.
    :param module_dut:
    :param ws_client:
    :param upnp_service:
    :return:
    "
"skipped","Fri Apr 21 19:42:35 GMT 2023","Fri Apr 21 19:42:35 GMT 2023","0","player.muse","test_upnp_namespace","","","","test_upnp_eventing_load[TLS Cached]","
    SWPBL-196285 and SWPBL-195363
    Repeatedly set a string which will cause a UPnP event. Take CPU and memory measurements of the testbed.
    This is to gauge how much additional resources are utilized by TLS secured UPnP.
    :param dut_manager:
    :flush_tls_cache: Flushing the tls cache will cause much more resources to be used, as each connection the full handshake will need to occur
    :return:
    "
"passed","Fri Apr 21 19:41:32 GMT 2023","Fri Apr 21 19:41:33 GMT 2023","1005","player.muse","test_upnp_namespace","","","","test_upnpAVTransport_call_success_and_valid_event_body","
    Verify:
    1) call method returns requested output params for upnpAVTransport namespace
    2) events return a body param with base64 encoded string which decodes to a valid xml
    :param ws_client:
    :return:
    "
"passed","Fri Apr 21 19:40:22 GMT 2023","Fri Apr 21 19:40:24 GMT 2023","2153","player.muse","test_upnp_namespace","","","","test_upnp_namespace_subscribe_unsubscribe_success[upnpConnectionManager]","
    Last updated for SWPBL-144492
    Verify subscribe and unsubscribe for upnp tunneled namespaces return success.
    Also verify when unsubscribed, the sub id is removed from the player's subscription list.
    :param module_dut:
    :param ws_client:
    :param upnp_service:
    :return:
    "
"passed","Fri Apr 21 19:41:59 GMT 2023","Fri Apr 21 19:42:34 GMT 2023","34495","player.muse","test_upnp_namespace","","","","test_upnp_not_broadcast","
    SWPBL-190579
    Verify that UPNP events are not broadcast, each subscription should only see one event, it should not see the events for every subscriber.
    :param module_dut:
    :return:
    "
"passed","Fri Apr 21 19:41:01 GMT 2023","Fri Apr 21 19:41:03 GMT 2023","2146","player.muse","test_upnp_namespace","","","","test_upnp_namespace_subscribe_unsubscribe_success[upnpRenderingControl]","
    Last updated for SWPBL-144492
    Verify subscribe and unsubscribe for upnp tunneled namespaces return success.
    Also verify when unsubscribed, the sub id is removed from the player's subscription list.
    :param module_dut:
    :param ws_client:
    :param upnp_service:
    :return:
    "
"passed","Fri Apr 21 19:40:33 GMT 2023","Fri Apr 21 19:40:35 GMT 2023","2148","player.muse","test_upnp_namespace","","","","test_upnp_namespace_subscribe_unsubscribe_success[upnpDeviceProperties]","
    Last updated for SWPBL-144492
    Verify subscribe and unsubscribe for upnp tunneled namespaces return success.
    Also verify when unsubscribed, the sub id is removed from the player's subscription list.
    :param module_dut:
    :param ws_client:
    :param upnp_service:
    :return:
    "
"passed","Fri Apr 21 19:41:12 GMT 2023","Fri Apr 21 19:41:15 GMT 2023","2152","player.muse","test_upnp_namespace","","","","test_upnp_namespace_subscribe_unsubscribe_success[upnpZoneGroupTopology]","
    Last updated for SWPBL-144492
    Verify subscribe and unsubscribe for upnp tunneled namespaces return success.
    Also verify when unsubscribed, the sub id is removed from the player's subscription list.
    :param module_dut:
    :param ws_client:
    :param upnp_service:
    :return:
    "
"passed","Fri Apr 21 19:41:43 GMT 2023","Fri Apr 21 19:41:44 GMT 2023","1025","player.muse","test_upnp_namespace","","","","test_upnpAlarmClock_call_success","
    Verify call method returns requested output params for upnpAlarmClock namespace
    :param ws_client:
    :param module_dut:
    :return:
    "
"skipped","Fri Apr 21 19:42:35 GMT 2023","Fri Apr 21 19:42:35 GMT 2023","0","player.muse","test_upnp_namespace","","","","test_upnp_eventing_load[TLS Flushed]","
    SWPBL-196285 and SWPBL-195363
    Repeatedly set a string which will cause a UPnP event. Take CPU and memory measurements of the testbed.
    This is to gauge how much additional resources are utilized by TLS secured UPnP.
    :param dut_manager:
    :flush_tls_cache: Flushing the tls cache will cause much more resources to be used, as each connection the full handshake will need to occur
    :return:
    "
